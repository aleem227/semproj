{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\muham\\\\OneDrive\\\\Desktop\\\\ml-sproj\\\\ML-SemProj\\\\semproj\\\\src\\\\App.js\";\n// App.jsx\nimport React, { useRef, useState, useEffect } from 'react';\nimport * as tf from '@tensorflow/tfjs';\nimport './App.css';\nfunction App() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [model, setModel] = useState(null);\n  const [predictions, setPredictions] = useState({\n    age: null,\n    gender: null\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [cameraActive, setCameraActive] = useState(false);\n  const [modelLoading, setModelLoading] = useState(true);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [latency, setLatency] = useState(null);\n  const [selectedModel, setSelectedModel] = useState('resnet34');\n  const [modelLoadTime, setModelLoadTime] = useState(null);\n  useEffect(() => {\n    let isMounted = true;\n    const loadModel = async () => {\n      setModelLoading(true);\n      const startLoadTime = performance.now();\n      const modelPath = `/model/${selectedModel}/model.json`;\n      try {\n        const loadedModel = await tf.loadLayersModel(modelPath);\n        if (model) {\n          try {\n            model.dispose();\n          } catch (err) {\n            console.error('Error disposing previous model:', err);\n          }\n        }\n        const endLoadTime = performance.now();\n        const loadTime = (endLoadTime - startLoadTime).toFixed(2);\n        if (isMounted) {\n          setModel(loadedModel);\n          setModelLoadTime(loadTime);\n          setModelLoading(false);\n        } else {\n          loadedModel.dispose();\n        }\n      } catch (err) {\n        console.error(`Error loading ${selectedModel} model:`, err);\n        setModelLoading(false);\n      }\n    };\n    loadModel();\n    return () => {\n      isMounted = false;\n    };\n  }, [selectedModel]);\n  const handleModelChange = e => {\n    setSelectedModel(e.target.value);\n    setPredictions({\n      age: null,\n      gender: null\n    });\n    setLatency(null);\n  };\n  const startCamera = async () => {\n    try {\n      const constraints = {\n        video: {\n          facingMode: {\n            ideal: 'user'\n          },\n          width: {\n            ideal: 640\n          },\n          height: {\n            ideal: 480\n          }\n        },\n        audio: false\n      };\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        setCameraActive(true);\n        // Delay play to allow full stream setup\n        setTimeout(() => {\n          videoRef.current.play().catch(err => {\n            console.warn('Play request interrupted:', err);\n          });\n        }, 100);\n      }\n    } catch (err) {\n      console.error('Camera access error:', err);\n      setCameraActive(false);\n      alert(`Camera error: ${err.message}`);\n    }\n  };\n  const stopCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n      setCameraActive(false);\n    }\n  };\n  useEffect(() => {\n    startCamera();\n    return () => stopCamera();\n  }, []);\n  const captureImage = () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    if (!model || modelLoading) {\n      alert('Model not ready');\n      return;\n    }\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    setCapturedImage(canvas.toDataURL('image/jpeg'));\n    setTimeout(() => processImage(canvas), 50);\n  };\n  const processImage = async canvas => {\n    setIsLoading(true);\n    const startPredictionTime = performance.now();\n    try {\n      if (!model) throw new Error('Model not loaded');\n      const ctx = canvas.getContext('2d');\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const tensor = tf.browser.fromPixels(imgData).resizeBilinear([224, 224]).toFloat().div(tf.scalar(255)).expandDims(0);\n      const result = await model.predict(tensor);\n      const [ageTensor, genderTensor] = result;\n      const age = (await ageTensor.data())[0];\n      const genderProb = (await genderTensor.data())[0];\n      const endTime = performance.now();\n      const predictionTime = endTime - startPredictionTime;\n      setLatency(predictionTime.toFixed(2));\n      setPredictions({\n        age: Math.round(age),\n        gender: genderProb > 0.5 ? 'Female' : 'Male'\n      });\n      tensor.dispose();\n      ageTensor.dispose();\n      genderTensor.dispose();\n    } catch (err) {\n      console.error('Prediction error:', err);\n      alert(`Error: ${err.message}`);\n      resetCapture();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const resetCapture = async () => {\n    setCapturedImage(null);\n    setPredictions({\n      age: null,\n      gender: null\n    });\n    setLatency(null);\n    await startCamera();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }, modelLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 24\n    }\n  }, \"Loading model...\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, \"Age & Gender Predictor\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"resnet34\",\n    checked: selectedModel === 'resnet34',\n    onChange: handleModelChange,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }), \"ResNet-34\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"resnet152\",\n    checked: selectedModel === 'resnet152',\n    onChange: handleModelChange,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }), \"ResNet-152\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, !capturedImage ? /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    muted: true,\n    playsInline: true,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: capturedImage,\n    alt: \"Captured\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, !capturedImage ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: captureImage,\n    disabled: !cameraActive || modelLoading || isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, \"Capture Image\") : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetCapture,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"Retake Photo\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, \"Processing...\") : predictions.age !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, \"Age: \", predictions.age), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, \"Gender: \", predictions.gender), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, \"Latency: \", latency, \" ms\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, \"Model Load Time: \", modelLoadTime, \" ms\")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, \"No predictions yet\")));\n}\nexport default App;","map":{"version":3,"names":["React","useRef","useState","useEffect","tf","App","videoRef","canvasRef","model","setModel","predictions","setPredictions","age","gender","isLoading","setIsLoading","cameraActive","setCameraActive","modelLoading","setModelLoading","capturedImage","setCapturedImage","latency","setLatency","selectedModel","setSelectedModel","modelLoadTime","setModelLoadTime","isMounted","loadModel","startLoadTime","performance","now","modelPath","loadedModel","loadLayersModel","dispose","err","console","error","endLoadTime","loadTime","toFixed","handleModelChange","e","target","value","startCamera","constraints","video","facingMode","ideal","width","height","audio","stream","navigator","mediaDevices","getUserMedia","current","srcObject","setTimeout","play","catch","warn","alert","message","stopCamera","getTracks","forEach","track","stop","captureImage","canvas","ctx","getContext","videoWidth","videoHeight","drawImage","toDataURL","processImage","startPredictionTime","Error","imgData","getImageData","tensor","browser","fromPixels","resizeBilinear","toFloat","div","scalar","expandDims","result","predict","ageTensor","genderTensor","data","genderProb","endTime","predictionTime","Math","round","resetCapture","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","disabled","ref","autoPlay","muted","playsInline","style","src","alt","display","onClick"],"sources":["C:/Users/muham/OneDrive/Desktop/ml-sproj/ML-SemProj/semproj/src/App.js"],"sourcesContent":["// App.jsx\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const [model, setModel] = useState(null);\r\n  const [predictions, setPredictions] = useState({ age: null, gender: null });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [cameraActive, setCameraActive] = useState(false);\r\n  const [modelLoading, setModelLoading] = useState(true);\r\n  const [capturedImage, setCapturedImage] = useState(null);\r\n  const [latency, setLatency] = useState(null);\r\n  const [selectedModel, setSelectedModel] = useState('resnet34');\r\n  const [modelLoadTime, setModelLoadTime] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const loadModel = async () => {\r\n      setModelLoading(true);\r\n      const startLoadTime = performance.now();\r\n      const modelPath = `/model/${selectedModel}/model.json`;\r\n\r\n      try {\r\n        const loadedModel = await tf.loadLayersModel(modelPath);\r\n\r\n        if (model) {\r\n          try {\r\n            model.dispose();\r\n          } catch (err) {\r\n            console.error('Error disposing previous model:', err);\r\n          }\r\n        }\r\n\r\n        const endLoadTime = performance.now();\r\n        const loadTime = (endLoadTime - startLoadTime).toFixed(2);\r\n\r\n        if (isMounted) {\r\n          setModel(loadedModel);\r\n          setModelLoadTime(loadTime);\r\n          setModelLoading(false);\r\n        } else {\r\n          loadedModel.dispose();\r\n        }\r\n      } catch (err) {\r\n        console.error(`Error loading ${selectedModel} model:`, err);\r\n        setModelLoading(false);\r\n      }\r\n    };\r\n\r\n    loadModel();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [selectedModel]);\r\n\r\n  const handleModelChange = (e) => {\r\n    setSelectedModel(e.target.value);\r\n    setPredictions({ age: null, gender: null });\r\n    setLatency(null);\r\n  };\r\n\r\n  const startCamera = async () => {\r\n    try {\r\n      const constraints = {\r\n        video: {\r\n          facingMode: { ideal: 'user' },\r\n          width: { ideal: 640 },\r\n          height: { ideal: 480 },\r\n        },\r\n        audio: false,\r\n      };\r\n\r\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        setCameraActive(true);\r\n        // Delay play to allow full stream setup\r\n        setTimeout(() => {\r\n          videoRef.current.play().catch((err) => {\r\n            console.warn('Play request interrupted:', err);\r\n          });\r\n        }, 100);\r\n      }\r\n    } catch (err) {\r\n      console.error('Camera access error:', err);\r\n      setCameraActive(false);\r\n      alert(`Camera error: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  const stopCamera = () => {\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      videoRef.current.srcObject.getTracks().forEach((track) => track.stop());\r\n      videoRef.current.srcObject = null;\r\n      setCameraActive(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    startCamera();\r\n    return () => stopCamera();\r\n  }, []);\r\n\r\n  const captureImage = () => {\r\n    if (!videoRef.current || !canvasRef.current) return;\r\n    if (!model || modelLoading) {\r\n      alert('Model not ready');\r\n      return;\r\n    }\r\n\r\n    const canvas = canvasRef.current;\r\n    const video = videoRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    setCapturedImage(canvas.toDataURL('image/jpeg'));\r\n\r\n    setTimeout(() => processImage(canvas), 50);\r\n  };\r\n\r\n  const processImage = async (canvas) => {\r\n    setIsLoading(true);\r\n    const startPredictionTime = performance.now();\r\n    try {\r\n      if (!model) throw new Error('Model not loaded');\r\n      const ctx = canvas.getContext('2d');\r\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n      const tensor = tf.browser\r\n        .fromPixels(imgData)\r\n        .resizeBilinear([224, 224])\r\n        .toFloat()\r\n        .div(tf.scalar(255))\r\n        .expandDims(0);\r\n\r\n      const result = await model.predict(tensor);\r\n      const [ageTensor, genderTensor] = result;\r\n      const age = (await ageTensor.data())[0];\r\n      const genderProb = (await genderTensor.data())[0];\r\n\r\n      const endTime = performance.now();\r\n      const predictionTime = endTime - startPredictionTime;\r\n      setLatency(predictionTime.toFixed(2));\r\n\r\n      setPredictions({\r\n        age: Math.round(age),\r\n        gender: genderProb > 0.5 ? 'Female' : 'Male',\r\n      });\r\n\r\n      tensor.dispose();\r\n      ageTensor.dispose();\r\n      genderTensor.dispose();\r\n    } catch (err) {\r\n      console.error('Prediction error:', err);\r\n      alert(`Error: ${err.message}`);\r\n      resetCapture();\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetCapture = async () => {\r\n    setCapturedImage(null);\r\n    setPredictions({ age: null, gender: null });\r\n    setLatency(null);\r\n    await startCamera();\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {modelLoading && <div className=\"loading-overlay\">Loading model...</div>}\r\n\r\n      <h1>Age & Gender Predictor</h1>\r\n\r\n      <div>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"resnet34\"\r\n            checked={selectedModel === 'resnet34'}\r\n            onChange={handleModelChange}\r\n            disabled={isLoading}\r\n          />\r\n          ResNet-34\r\n        </label>\r\n\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"resnet152\"\r\n            checked={selectedModel === 'resnet152'}\r\n            onChange={handleModelChange}\r\n            disabled={isLoading}\r\n          />\r\n          ResNet-152\r\n        </label>\r\n      </div>\r\n\r\n      <div>\r\n        {!capturedImage ? (\r\n          <video ref={videoRef} autoPlay muted playsInline style={{ width: '100%' }} />\r\n        ) : (\r\n          <img src={capturedImage} alt=\"Captured\" />\r\n        )}\r\n        <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n      </div>\r\n\r\n      <div>\r\n        {!capturedImage ? (\r\n          <button onClick={captureImage} disabled={!cameraActive || modelLoading || isLoading}>\r\n            Capture Image\r\n          </button>\r\n        ) : (\r\n          <button onClick={resetCapture} disabled={isLoading}>\r\n            Retake Photo\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        {isLoading ? (\r\n          <p>Processing...</p>\r\n        ) : predictions.age !== null ? (\r\n          <div>\r\n            <p>Age: {predictions.age}</p>\r\n            <p>Gender: {predictions.gender}</p>\r\n            <p>Latency: {latency} ms</p>\r\n            <p>Model Load Time: {modelLoadTime} ms</p>\r\n          </div>\r\n        ) : (\r\n          <p>No predictions yet</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}