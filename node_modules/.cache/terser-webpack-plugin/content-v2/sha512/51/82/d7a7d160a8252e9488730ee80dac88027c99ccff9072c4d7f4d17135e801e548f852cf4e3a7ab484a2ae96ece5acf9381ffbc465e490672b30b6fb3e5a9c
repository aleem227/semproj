{"map":"{\"version\":3,\"sources\":[\"C:/Users/muham/OneDrive/Desktop/ml-sproj/ML-SemProj/semproj/src/App.js\",\"C:/Users/muham/OneDrive/Desktop/ml-sproj/ML-SemProj/semproj/src/reportWebVitals.js\",\"C:/Users/muham/OneDrive/Desktop/ml-sproj/ML-SemProj/semproj/src/index.js\"],\"names\":[\"App\",\"videoRef\",\"useRef\",\"canvasRef\",\"model\",\"setModel\",\"useState\",\"predictions\",\"setPredictions\",\"age\",\"gender\",\"isLoading\",\"setIsLoading\",\"cameraActive\",\"setCameraActive\",\"modelLoading\",\"setModelLoading\",\"capturedImage\",\"setCapturedImage\",\"latency\",\"setLatency\",\"selectedModel\",\"setSelectedModel\",\"modelLoadTime\",\"setModelLoadTime\",\"predictionStartTime\",\"setPredictionStartTime\",\"useEffect\",\"isMounted\",\"disposed\",\"async\",\"startLoadTime\",\"performance\",\"now\",\"modelPath\",\"attempts\",\"loadedModel\",\"error\",\"tf\",\"err\",\"Promise\",\"res\",\"setTimeout\",\"loadTime\",\"toFixed\",\"dispose\",\"console\",\"alert\",\"message\",\"loadModel\",\"handleModelChange\",\"e\",\"target\",\"value\",\"startCamera\",\"navigator\",\"mediaDevices\",\"getUserMedia\",\"Error\",\"stream\",\"video\",\"facingMode\",\"width\",\"height\",\"current\",\"srcObject\",\"play\",\"onloadedmetadata\",\"readyState\",\"stopCamera\",\"getTracks\",\"forEach\",\"track\",\"stop\",\"processImage\",\"startTime\",\"imageData\",\"canvas\",\"getContext\",\"getImageData\",\"tensor\",\"fromPixels\",\"resizeBilinear\",\"toFloat\",\"div\",\"expandDims\",\"result\",\"predict\",\"dataSync\",\"endTime\",\"t\",\"Math\",\"round\",\"resetCapture\",\"React\",\"createElement\",\"Fragment\",\"className\",\"type\",\"name\",\"checked\",\"onChange\",\"disabled\",\"role\",\"aria-label\",\"src\",\"alt\",\"ref\",\"autoPlay\",\"playsInline\",\"muted\",\"viewBox\",\"preserveAspectRatio\",\"x1\",\"y1\",\"x2\",\"y2\",\"style\",\"display\",\"onClick\",\"id\",\"htmlFor\",\"title\",\"d\",\"captureImage\",\"context\",\"videoWidth\",\"videoHeight\",\"drawImage\",\"imageUrl\",\"toDataURL\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"then\",\"bind\",\"_ref\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useRef, useState, useEffect } from 'react';\\r\\n// Re-enable TensorFlow.js import\\r\\nimport * as tf from '@tensorflow/tfjs';\\r\\nimport './App.css';\\r\\n\\r\\nfunction App() {\\r\\n  const videoRef = useRef(null);\\r\\n  const canvasRef = useRef(null);\\r\\n  // Re-add model state\\r\\n  const [model, setModel] = useState(null);\\r\\n  const [predictions, setPredictions] = useState({ age: null, gender: null });\\r\\n  const [isLoading, setIsLoading] = useState(false);\\r\\n  const [cameraActive, setCameraActive] = useState(false);\\r\\n  // Remove backend ready state since we'll use client-side model\\r\\n  const [modelLoading, setModelLoading] = useState(true);\\r\\n  const [capturedImage, setCapturedImage] = useState(null);\\r\\n  // Add latency state\\r\\n  const [latency, setLatency] = useState(null);\\r\\n  // Add selected model state\\r\\n  const [selectedModel, setSelectedModel] = useState('resnet34');\\r\\n  // Add model load time state\\r\\n  const [modelLoadTime, setModelLoadTime] = useState(null);\\r\\n  // Add prediction start time state\\r\\n  const [predictionStartTime, setPredictionStartTime] = useState(null);\\r\\n\\r\\n  // Load model when component mounts or when selected model changes\\r\\n  // eslint-disable-next-line react-hooks/exhaustive-deps\\r\\n  useEffect(() => {\\r\\n    let isMounted = true;\\r\\n    let disposed = false;\\r\\n\\r\\n    // Set loading state immediately when starting to load a model\\r\\n    setModelLoading(true);\\r\\n\\r\\n    const loadModel = async () => {\\r\\n      const startLoadTime = performance.now();\\r\\n      const modelPath = `/model/${selectedModel}/model.json`;\\r\\n      let attempts = 0;\\r\\n      let loadedModel = null;\\r\\n      let error = null;\\r\\n\\r\\n      while (attempts < 3 && !loadedModel) {\\r\\n        try {\\r\\n          loadedModel = await tf.loadLayersModel(modelPath);\\r\\n        } catch (err) {\\r\\n          error = err;\\r\\n          attempts++;\\r\\n          if (attempts < 3) {\\r\\n            // Wait 1 second before retrying\\r\\n            await new Promise(res => setTimeout(res, 1000));\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n\\r\\n      if (loadedModel) {\\r\\n        const endLoadTime = performance.now();\\r\\n        const loadTime = (endLoadTime - startLoadTime).toFixed(2);\\r\\n\\r\\n        // Dispose previous model BEFORE setting new one\\r\\n        if (model) {\\r\\n          try {\\r\\n            model.dispose();\\r\\n          } catch (err) {\\r\\n            console.error('Error disposing previous model:', err);\\r\\n          }\\r\\n        }\\r\\n\\r\\n        if (isMounted && !disposed) {\\r\\n          setModel(loadedModel);\\r\\n          setModelLoadTime(loadTime);\\r\\n          setModelLoading(false); // Hide loading overlay\\r\\n        } else {\\r\\n          loadedModel.dispose();\\r\\n        }\\r\\n      } else {\\r\\n        setModelLoading(false); // Hide loading overlay on failure\\r\\n        console.error(`Error loading ${selectedModel} model after 3 attempts:`, error);\\r\\n        alert(`Failed to load model after 3 attempts: ${error.message}`);\\r\\n      }\\r\\n    };\\r\\n\\r\\n    loadModel();\\r\\n\\r\\n    return () => {\\r\\n      isMounted = false;\\r\\n      disposed = true;\\r\\n    };\\r\\n  }, [selectedModel]);\\r\\n\\r\\n  // Handle model selection change\\r\\n  const handleModelChange = (e) => {\\r\\n    setSelectedModel(e.target.value);\\r\\n    setPredictions({ age: null, gender: null });\\r\\n    setLatency(null);\\r\\n  };\\r\\n\\r\\n  // Initialize camera\\r\\n  const startCamera = async () => {\\r\\n    try {\\r\\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\\r\\n        throw new Error('Your browser does not support webcam access');\\r\\n      }\\r\\n      \\r\\n      const stream = await navigator.mediaDevices.getUserMedia({\\r\\n        video: { facingMode: 'user', width: 640, height: 480 }\\r\\n      });\\r\\n      \\r\\n      if (videoRef.current) {\\r\\n        videoRef.current.srcObject = stream;\\r\\n        videoRef.current.play(); // Explicitly play the video\\r\\n        setCameraActive(true); // Set active immediately\\r\\n        \\r\\n        // Additional check after metadata loads\\r\\n        videoRef.current.onloadedmetadata = () => {\\r\\n          if (videoRef.current.readyState >= 2) {\\r\\n            setCameraActive(true);\\r\\n          }\\r\\n        };\\r\\n      }\\r\\n    } catch (err) {\\r\\n      console.error(\\\"Error accessing webcam:\\\", err);\\r\\n      setCameraActive(false);\\r\\n      alert(`Camera error: ${err.message}`);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  // Stop camera\\r\\n  const stopCamera = () => {\\r\\n    if (videoRef.current && videoRef.current.srcObject) {\\r\\n      const tracks = videoRef.current.srcObject.getTracks();\\r\\n      tracks.forEach(track => track.stop());\\r\\n      videoRef.current.srcObject = null;\\r\\n      setCameraActive(false);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  // Start camera automatically when component mounts\\r\\n  useEffect(() => {\\r\\n    startCamera();\\r\\n    \\r\\n    // Cleanup on component unmount\\r\\n    return () => {\\r\\n      stopCamera();\\r\\n    };\\r\\n  }, []);\\r\\n\\r\\n  // Capture image from webcam\\r\\n  const captureImage = () => {\\r\\n    if (!videoRef.current || !canvasRef.current) return;\\r\\n    if (!model) {\\r\\n      alert(\\\"Model is not loaded yet. Please wait.\\\");\\r\\n      return;\\r\\n    }\\r\\n    \\r\\n    const video = videoRef.current;\\r\\n    const canvas = canvasRef.current;\\r\\n    const context = canvas.getContext('2d');\\r\\n    \\r\\n    // Set canvas dimensions to match video\\r\\n    canvas.width = video.videoWidth;\\r\\n    canvas.height = video.videoHeight;\\r\\n    \\r\\n    // Draw the current video frame to the canvas\\r\\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\\r\\n    \\r\\n    // Save captured image\\r\\n    const imageUrl = canvas.toDataURL('image/jpeg');\\r\\n    setCapturedImage(imageUrl);\\r\\n    \\r\\n    // Process the image and make prediction\\r\\n    processImage(canvas);\\r\\n  };\\r\\n\\r\\n  // Process image and make prediction using TensorFlow.js\\r\\n  const processImage = async (canvas) => {\\r\\n    setIsLoading(true);\\r\\n\\r\\n    // Start timing here\\r\\n    const startTime = performance.now();\\r\\n\\r\\n    try {\\r\\n      if (!model) {\\r\\n        throw new Error('Model is not loaded yet');\\r\\n      }\\r\\n\\r\\n      // Preprocess the image for the model\\r\\n      const imageData = canvas.getContext('2d').getImageData(0, 0, canvas.width, canvas.height);\\r\\n      \\r\\n      // Resize and normalize the image data for the model\\r\\n      const tensor = tf.browser.fromPixels(imageData)\\r\\n        .resizeBilinear([224, 224]) // Resize to model input size\\r\\n        .toFloat()\\r\\n        .div(tf.scalar(255.0)) // Normalize to [0,1]\\r\\n        .expandDims(0); // Add batch dimension\\r\\n      \\r\\n      // Make prediction\\r\\n      const result = await model.predict(tensor);\\r\\n      \\r\\n      // Process the prediction results\\r\\n      // Assuming the model outputs [age, gender]\\r\\n      const predictions = await result[0].dataSync(); // Get age\\r\\n      const gender = await result[1].dataSync(); // Get gender\\r\\n      \\r\\n      // Calculate latency\\r\\n      const endTime = performance.now();\\r\\n      setLatency((endTime - startTime).toFixed(2));\\r\\n      \\r\\n      // Clean up tensor to prevent memory leaks\\r\\n      tensor.dispose();\\r\\n      result.forEach(t => t.dispose());\\r\\n      \\r\\n      setPredictions({\\r\\n        age: Math.round(predictions[0]),\\r\\n        gender: gender[0] > 0.5 ? 'Female' : 'Male'\\r\\n      });\\r\\n    } catch (err) {\\r\\n      console.error(\\\"Error processing image:\\\", err);\\r\\n      alert(`Error processing image: ${err.message}`);\\r\\n      resetCapture();\\r\\n    } finally {\\r\\n      setIsLoading(false);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  // Reset the process\\r\\n  const resetCapture = async () => {\\r\\n    setCapturedImage(null);\\r\\n    setPredictions({ age: null, gender: null });\\r\\n    setLatency(null);\\r\\n    await startCamera();\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      {modelLoading && (\\r\\n        <div className=\\\"model-loading-overlay\\\">\\r\\n          <div className=\\\"model-loading-spinner\\\"></div>\\r\\n          <div className=\\\"model-loading-text\\\">Loading model...</div>\\r\\n        </div>\\r\\n      )}\\r\\n      <div className=\\\"app-container\\\">\\r\\n        <div className=\\\"project-introduction\\\">\\r\\n          <div className=\\\"project-title\\\">Machine Learning - Semester Project</div>\\r\\n          <div className=\\\"authors\\\">\\r\\n            <ul>\\r\\n              <li>Muhammad Aleem Shakeel</li>\\r\\n              {/* <li>Sheza Naqvi</li>\\r\\n              <li>Zainab</li> */}\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div className=\\\"header\\\">\\r\\n          <h1>Age & Gender Predictor</h1>\\r\\n        </div>\\r\\n        \\r\\n        <div className=\\\"model-selection\\\">\\r\\n          <h3>Select Model</h3>\\r\\n          <div className=\\\"model-options\\\">\\r\\n            <label className={`model-option ${selectedModel === 'resnet34' ? 'selected' : ''}`}>\\r\\n              <input\\r\\n                type=\\\"radio\\\"\\r\\n                name=\\\"model\\\"\\r\\n                value=\\\"resnet34\\\"\\r\\n                checked={selectedModel === 'resnet34'}\\r\\n                onChange={handleModelChange}\\r\\n                disabled={isLoading || modelLoading}\\r\\n              />\\r\\n              <div className=\\\"model-details\\\">\\r\\n                <h4>ResNet-34</h4>\\r\\n                <p className=\\\"model-description\\\">Lightweight model with good latency and accuracy tradeoff</p>\\r\\n                <div className=\\\"model-specs\\\">\\r\\n                  <span className=\\\"spec-item\\\">\\r\\n                    <span role=\\\"img\\\" aria-label=\\\"Fast\\\">⚡</span> Fast inference\\r\\n                  </span>\\r\\n                  <span className=\\\"spec-item\\\">\\r\\n                    <span role=\\\"img\\\" aria-label=\\\"Balanced\\\">✓</span> Balanced accuracy\\r\\n                  </span>\\r\\n                  <span className=\\\"spec-item\\\">\\r\\n                    <span role=\\\"img\\\" aria-label=\\\"Mobile\\\">📱</span> Mobile-friendly\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </label>\\r\\n            \\r\\n            <label className={`model-option ${selectedModel === 'resnet152' ? 'selected' : ''}`}>\\r\\n              <input\\r\\n                type=\\\"radio\\\"\\r\\n                name=\\\"model\\\"\\r\\n                value=\\\"resnet152\\\"\\r\\n                checked={selectedModel === 'resnet152'}\\r\\n                onChange={handleModelChange}\\r\\n                disabled={isLoading || modelLoading}\\r\\n              />\\r\\n              <div className=\\\"model-details\\\">\\r\\n                <h4>ResNet-152</h4>\\r\\n                <p className=\\\"model-description\\\">State-of-the-art model with high accuracy</p>\\r\\n                <div className=\\\"model-specs\\\">\\r\\n                  <span className=\\\"spec-item\\\">\\r\\n                    <span role=\\\"img\\\" aria-label=\\\"Accurate\\\">🎯</span> Superior accuracy\\r\\n                  </span>\\r\\n                  <span className=\\\"spec-item\\\">\\r\\n                    <span role=\\\"img\\\" aria-label=\\\"Slower\\\">⏱️</span> Higher latency\\r\\n                  </span>\\r\\n                  <span className=\\\"spec-item\\\">\\r\\n                    <span role=\\\"img\\\" aria-label=\\\"Desktop\\\">💻</span> Better for desktop\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </label>\\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n        <div className=\\\"main-content\\\">\\r\\n          <div className=\\\"video-section\\\">\\r\\n            <div className={`video-container ${cameraActive ? 'camera-active' : ''}`}>\\r\\n              {!capturedImage ? (\\r\\n                <video \\r\\n                  ref={videoRef}\\r\\n                  autoPlay\\r\\n                  playsInline\\r\\n                  muted\\r\\n                />\\r\\n              ) : (\\r\\n                <img \\r\\n                  src={capturedImage} \\r\\n                  alt=\\\"Captured\\\" \\r\\n                  className=\\\"captured-image\\\"\\r\\n                />\\r\\n              )}\\r\\n              \\r\\n              <div className=\\\"video-overlay\\\">\\r\\n                {!capturedImage && cameraActive && (\\r\\n                  <svg className=\\\"frame-lines\\\" viewBox=\\\"0 0 100 100\\\" preserveAspectRatio=\\\"none\\\">\\r\\n                    <line x1=\\\"30\\\" y1=\\\"0\\\" x2=\\\"30\\\" y2=\\\"10\\\" />\\r\\n                    <line x1=\\\"0\\\" y1=\\\"30\\\" x2=\\\"10\\\" y2=\\\"30\\\" />\\r\\n                    \\r\\n                    <line x1=\\\"70\\\" y1=\\\"0\\\" x2=\\\"70\\\" y2=\\\"10\\\" />\\r\\n                    <line x1=\\\"90\\\" y1=\\\"30\\\" x2=\\\"100\\\" y2=\\\"30\\\" />\\r\\n                    \\r\\n                    <line x1=\\\"30\\\" y1=\\\"90\\\" x2=\\\"30\\\" y2=\\\"100\\\" />\\r\\n                    <line x1=\\\"0\\\" y1=\\\"70\\\" x2=\\\"10\\\" y2=\\\"70\\\" />\\r\\n                    \\r\\n                    <line x1=\\\"70\\\" y1=\\\"90\\\" x2=\\\"70\\\" y2=\\\"100\\\" />\\r\\n                    <line x1=\\\"90\\\" y1=\\\"70\\\" x2=\\\"100\\\" y2=\\\"70\\\" />\\r\\n                  </svg>\\r\\n                )}\\r\\n              </div>\\r\\n              \\r\\n              <canvas ref={canvasRef} style={{ display: 'none' }} />\\r\\n            </div>\\r\\n            \\r\\n            <div className=\\\"camera-controls\\\">\\r\\n              {!capturedImage ? (\\r\\n                <>\\r\\n                  <div className=\\\"camera-toggle-container\\\">\\r\\n                    <input \\r\\n                      type=\\\"checkbox\\\"\\r\\n                      id=\\\"camera-toggle\\\"\\r\\n                      className=\\\"camera-toggle-checkbox\\\"\\r\\n                      checked={cameraActive}\\r\\n                      onChange={cameraActive ? stopCamera : startCamera}\\r\\n                      disabled={isLoading}\\r\\n                    />\\r\\n                    <label \\r\\n                      htmlFor=\\\"camera-toggle\\\" \\r\\n                      className=\\\"camera-toggle-label\\\"\\r\\n                      title={cameraActive ? \\\"Turn camera off\\\" : \\\"Turn camera on\\\"}\\r\\n                    >\\r\\n                      <div className=\\\"camera-toggle-inner\\\">\\r\\n                        <div className=\\\"camera-toggle-switch\\\">\\r\\n                          <svg className=\\\"camera-icon\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                            <path d=\\\"M18 10.48V6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-4.48l4 3.98v-11l-4 3.98zm-2-.79V18H4V6h12v3.69z\\\" />\\r\\n                          </svg>\\r\\n                          <svg className=\\\"camera-off-icon\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                            <path d=\\\"M18 10.48V6c0-1.1-.9-2-2-2H8.83l2 2H16v3.17l1.83 1.83L18 10.48zm2.5-.48L15.17 4H12c-1.1 0-2 .9-2 2h-4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c.34 0 .65-.09.93-.24L20.5 10zM2.1 4.93L4 6.83V14c0 1.1.9 2 2 2h8.17l1.73 1.73c-.28.15-.59.24-.93.24H6c-1.1 0-2-.9-2-2V8.83L1.9 6.73 2.1 4.93z\\\" />\\r\\n                            <path d=\\\"M3.55 2.44L2.1 3.89l18 18 1.45-1.45z\\\" />\\r\\n                          </svg>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <span className=\\\"toggle-status\\\">\\r\\n                        {cameraActive ? \\\"Camera On\\\" : \\\"Camera Off\\\"}\\r\\n                      </span>\\r\\n                    </label>\\r\\n                  </div>\\r\\n                  \\r\\n                  <button\\r\\n                    className=\\\"primary-button\\\"\\r\\n                    onClick={captureImage}\\r\\n                    disabled={!cameraActive || isLoading || modelLoading || !model}\\r\\n                  >\\r\\n                    Capture Image\\r\\n                  </button>\\r\\n                </>\\r\\n              ) : (\\r\\n                <button \\r\\n                  className=\\\"secondary-button\\\"\\r\\n                  onClick={resetCapture}\\r\\n                  disabled={isLoading}\\r\\n                >\\r\\n                  Take New Photo\\r\\n                </button>\\r\\n              )}\\r\\n            </div>\\r\\n          </div>\\r\\n          \\r\\n          <div className=\\\"results-section\\\">\\r\\n            <div className=\\\"results-card\\\">\\r\\n              <h2>Analysis Results</h2>\\r\\n              \\r\\n              {isLoading ? (\\r\\n                <div className=\\\"loading-container\\\">\\r\\n                  <div className=\\\"loading-spinner\\\"></div>\\r\\n                  <p>Analyzing image with {selectedModel}...</p>\\r\\n                </div>\\r\\n              ) : predictions.age !== null ? (\\r\\n                <div className=\\\"prediction-results\\\">\\r\\n                  <div className=\\\"result-item\\\">\\r\\n                    <div className=\\\"result-label\\\">Age</div>\\r\\n                    <div className=\\\"result-value\\\">{predictions.age} years</div>\\r\\n                  </div>\\r\\n                  <div className=\\\"result-item\\\">\\r\\n                    <div className=\\\"result-label\\\">Gender</div>\\r\\n                    <div className=\\\"result-value\\\">{predictions.gender}</div>\\r\\n                  </div>\\r\\n                  <div className=\\\"performance-metrics\\\">\\r\\n                    <div className=\\\"result-item\\\">\\r\\n                      <div className=\\\"result-label\\\">Model Load Time</div>\\r\\n                      <div className=\\\"result-value\\\">{modelLoadTime} ms</div>\\r\\n                    </div>\\r\\n                    {latency && (\\r\\n                      <div className=\\\"result-item\\\">\\r\\n                        <div className=\\\"result-label\\\">Processing Time</div>\\r\\n                        <div className=\\\"result-value\\\">{latency} ms</div>\\r\\n                      </div>\\r\\n                    )}\\r\\n                  </div>\\r\\n                  <div className=\\\"model-info\\\">Using {selectedModel === 'resnet34' ? 'ResNet-34' : 'ResNet-152'} model</div>\\r\\n                </div>\\r\\n              ) : (\\r\\n                <div className=\\\"empty-results\\\">\\r\\n                  <p>Capture an image to see predictions</p>\\r\\n                  {modelLoadTime && (\\r\\n                    <div className=\\\"model-load-info\\\">\\r\\n                      <p>Model loaded in {modelLoadTime} ms</p>\\r\\n                    </div>\\r\\n                  )}\\r\\n                </div>\\r\\n              )}\\r\\n            </div>\\r\\n            \\r\\n            <div className=\\\"info-card\\\">\\r\\n              <h3>How it works</h3>\\r\\n              <p>This app uses a TensorFlow.js model running directly in your browser to predict age and gender from facial images.</p>\\r\\n              <p>For best results:</p>\\r\\n              <ul>\\r\\n                <li>Ensure good lighting</li>\\r\\n                <li>Face the camera directly</li>\\r\\n                <li>Remove hats or sunglasses</li>\\r\\n              </ul>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default App;\",\"const reportWebVitals = onPerfEntry => {\\r\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\r\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\r\\n      getCLS(onPerfEntry);\\r\\n      getFID(onPerfEntry);\\r\\n      getFCP(onPerfEntry);\\r\\n      getLCP(onPerfEntry);\\r\\n      getTTFB(onPerfEntry);\\r\\n    });\\r\\n  }\\r\\n};\\r\\n\\r\\nexport default reportWebVitals;\\r\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom/client';\\r\\nimport './index.css';\\r\\nimport App from './App';\\r\\nimport reportWebVitals from './reportWebVitals';\\r\\n\\r\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\r\\nroot.render(\\r\\n  <React.StrictMode>\\r\\n    <App />\\r\\n  </React.StrictMode>\\r\\n);\\r\\n\\r\\n// If you want to start measuring performance in your app, pass a function\\r\\n// to log results (for example: reportWebVitals(console.log))\\r\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\r\\nreportWebVitals();\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{234:function(e,a,t){e.exports=t(261)},242:function(e,a,t){},247:function(e,a){},248:function(e,a){},256:function(e,a){},257:function(e,a){},258:function(e,a){},259:function(e,a){},260:function(e,a,t){},261:function(e,a,t){\"use strict\";t.r(a);var l=t(11),n=t.n(l),c=t(210),r=t.n(c),s=(t(242),t(184));t(260);var m=function(){const e=Object(l.useRef)(null),a=Object(l.useRef)(null),[t,c]=Object(l.useState)(null),[r,m]=Object(l.useState)({age:null,gender:null}),[i,o]=Object(l.useState)(!1),[d,u]=Object(l.useState)(!1),[E,g]=Object(l.useState)(!0),[p,v]=Object(l.useState)(null),[h,N]=Object(l.useState)(null),[f,y]=Object(l.useState)(\"resnet34\"),[b,w]=Object(l.useState)(null),[x,j]=Object(l.useState)(null);Object(l.useEffect)(()=>{let e=!0,a=!1;return g(!0),(async()=>{const l=performance.now(),n=`/model/${f}/model.json`;let r=0,m=null,i=null;for(;r<3&&!m;)try{m=await s.b(n)}catch(o){i=o,++r<3&&await new Promise(e=>setTimeout(e,1e3))}if(m){const n=(performance.now()-l).toFixed(2);if(t)try{t.dispose()}catch(o){console.error(\"Error disposing previous model:\",o)}e&&!a?(c(m),w(n),g(!1)):m.dispose()}else g(!1),console.error(`Error loading ${f} model after 3 attempts:`,i),alert(`Failed to load model after 3 attempts: ${i.message}`)})(),()=>{e=!1,a=!0}},[f]);const S=e=>{y(e.target.value),m({age:null,gender:null}),N(null)},O=async()=>{try{if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new Error(\"Your browser does not support webcam access\");const t=await navigator.mediaDevices.getUserMedia({video:{facingMode:\"user\",width:640,height:480}});e.current&&(e.current.srcObject=t,e.current.play(),u(!0),e.current.onloadedmetadata=(()=>{e.current.readyState>=2&&u(!0)}))}catch(a){console.error(\"Error accessing webcam:\",a),u(!1),alert(`Camera error: ${a.message}`)}},M=()=>{e.current&&e.current.srcObject&&(e.current.srcObject.getTracks().forEach(e=>e.stop()),e.current.srcObject=null,u(!1))};Object(l.useEffect)(()=>(O(),()=>{M()}),[]);const F=async e=>{o(!0);const a=performance.now();try{if(!t)throw new Error(\"Model is not loaded yet\");const n=e.getContext(\"2d\").getImageData(0,0,e.width,e.height),c=s.a.fromPixels(n).resizeBilinear([224,224]).toFloat().div(s.c(255)).expandDims(0),r=await t.predict(c),i=await r[0].dataSync(),d=await r[1].dataSync(),u=performance.now();N((u-a).toFixed(2)),c.dispose(),r.forEach(e=>e.dispose()),m({age:Math.round(i[0]),gender:d[0]>.5?\"Female\":\"Male\"})}catch(l){console.error(\"Error processing image:\",l),alert(`Error processing image: ${l.message}`),C()}finally{o(!1)}},C=async()=>{v(null),m({age:null,gender:null}),N(null),await O()};return n.a.createElement(n.a.Fragment,null,E&&n.a.createElement(\"div\",{className:\"model-loading-overlay\"},n.a.createElement(\"div\",{className:\"model-loading-spinner\"}),n.a.createElement(\"div\",{className:\"model-loading-text\"},\"Loading model...\")),n.a.createElement(\"div\",{className:\"app-container\"},n.a.createElement(\"div\",{className:\"project-introduction\"},n.a.createElement(\"div\",{className:\"project-title\"},\"Machine Learning - Semester Project\"),n.a.createElement(\"div\",{className:\"authors\"},n.a.createElement(\"ul\",null,n.a.createElement(\"li\",null,\"Muhammad Aleem Shakeel\")))),n.a.createElement(\"div\",{className:\"header\"},n.a.createElement(\"h1\",null,\"Age & Gender Predictor\")),n.a.createElement(\"div\",{className:\"model-selection\"},n.a.createElement(\"h3\",null,\"Select Model\"),n.a.createElement(\"div\",{className:\"model-options\"},n.a.createElement(\"label\",{className:`model-option ${\"resnet34\"===f?\"selected\":\"\"}`},n.a.createElement(\"input\",{type:\"radio\",name:\"model\",value:\"resnet34\",checked:\"resnet34\"===f,onChange:S,disabled:i||E}),n.a.createElement(\"div\",{className:\"model-details\"},n.a.createElement(\"h4\",null,\"ResNet-34\"),n.a.createElement(\"p\",{className:\"model-description\"},\"Lightweight model with good latency and accuracy tradeoff\"),n.a.createElement(\"div\",{className:\"model-specs\"},n.a.createElement(\"span\",{className:\"spec-item\"},n.a.createElement(\"span\",{role:\"img\",\"aria-label\":\"Fast\"},\"\\u26a1\"),\" Fast inference\"),n.a.createElement(\"span\",{className:\"spec-item\"},n.a.createElement(\"span\",{role:\"img\",\"aria-label\":\"Balanced\"},\"\\u2713\"),\" Balanced accuracy\"),n.a.createElement(\"span\",{className:\"spec-item\"},n.a.createElement(\"span\",{role:\"img\",\"aria-label\":\"Mobile\"},\"\\ud83d\\udcf1\"),\" Mobile-friendly\")))),n.a.createElement(\"label\",{className:`model-option ${\"resnet152\"===f?\"selected\":\"\"}`},n.a.createElement(\"input\",{type:\"radio\",name:\"model\",value:\"resnet152\",checked:\"resnet152\"===f,onChange:S,disabled:i||E}),n.a.createElement(\"div\",{className:\"model-details\"},n.a.createElement(\"h4\",null,\"ResNet-152\"),n.a.createElement(\"p\",{className:\"model-description\"},\"State-of-the-art model with high accuracy\"),n.a.createElement(\"div\",{className:\"model-specs\"},n.a.createElement(\"span\",{className:\"spec-item\"},n.a.createElement(\"span\",{role:\"img\",\"aria-label\":\"Accurate\"},\"\\ud83c\\udfaf\"),\" Superior accuracy\"),n.a.createElement(\"span\",{className:\"spec-item\"},n.a.createElement(\"span\",{role:\"img\",\"aria-label\":\"Slower\"},\"\\u23f1\\ufe0f\"),\" Higher latency\"),n.a.createElement(\"span\",{className:\"spec-item\"},n.a.createElement(\"span\",{role:\"img\",\"aria-label\":\"Desktop\"},\"\\ud83d\\udcbb\"),\" Better for desktop\")))))),n.a.createElement(\"div\",{className:\"main-content\"},n.a.createElement(\"div\",{className:\"video-section\"},n.a.createElement(\"div\",{className:`video-container ${d?\"camera-active\":\"\"}`},p?n.a.createElement(\"img\",{src:p,alt:\"Captured\",className:\"captured-image\"}):n.a.createElement(\"video\",{ref:e,autoPlay:!0,playsInline:!0,muted:!0}),n.a.createElement(\"div\",{className:\"video-overlay\"},!p&&d&&n.a.createElement(\"svg\",{className:\"frame-lines\",viewBox:\"0 0 100 100\",preserveAspectRatio:\"none\"},n.a.createElement(\"line\",{x1:\"30\",y1:\"0\",x2:\"30\",y2:\"10\"}),n.a.createElement(\"line\",{x1:\"0\",y1:\"30\",x2:\"10\",y2:\"30\"}),n.a.createElement(\"line\",{x1:\"70\",y1:\"0\",x2:\"70\",y2:\"10\"}),n.a.createElement(\"line\",{x1:\"90\",y1:\"30\",x2:\"100\",y2:\"30\"}),n.a.createElement(\"line\",{x1:\"30\",y1:\"90\",x2:\"30\",y2:\"100\"}),n.a.createElement(\"line\",{x1:\"0\",y1:\"70\",x2:\"10\",y2:\"70\"}),n.a.createElement(\"line\",{x1:\"70\",y1:\"90\",x2:\"70\",y2:\"100\"}),n.a.createElement(\"line\",{x1:\"90\",y1:\"70\",x2:\"100\",y2:\"70\"}))),n.a.createElement(\"canvas\",{ref:a,style:{display:\"none\"}})),n.a.createElement(\"div\",{className:\"camera-controls\"},p?n.a.createElement(\"button\",{className:\"secondary-button\",onClick:C,disabled:i},\"Take New Photo\"):n.a.createElement(n.a.Fragment,null,n.a.createElement(\"div\",{className:\"camera-toggle-container\"},n.a.createElement(\"input\",{type:\"checkbox\",id:\"camera-toggle\",className:\"camera-toggle-checkbox\",checked:d,onChange:d?M:O,disabled:i}),n.a.createElement(\"label\",{htmlFor:\"camera-toggle\",className:\"camera-toggle-label\",title:d?\"Turn camera off\":\"Turn camera on\"},n.a.createElement(\"div\",{className:\"camera-toggle-inner\"},n.a.createElement(\"div\",{className:\"camera-toggle-switch\"},n.a.createElement(\"svg\",{className:\"camera-icon\",viewBox:\"0 0 24 24\"},n.a.createElement(\"path\",{d:\"M18 10.48V6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-4.48l4 3.98v-11l-4 3.98zm-2-.79V18H4V6h12v3.69z\"})),n.a.createElement(\"svg\",{className:\"camera-off-icon\",viewBox:\"0 0 24 24\"},n.a.createElement(\"path\",{d:\"M18 10.48V6c0-1.1-.9-2-2-2H8.83l2 2H16v3.17l1.83 1.83L18 10.48zm2.5-.48L15.17 4H12c-1.1 0-2 .9-2 2h-4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c.34 0 .65-.09.93-.24L20.5 10zM2.1 4.93L4 6.83V14c0 1.1.9 2 2 2h8.17l1.73 1.73c-.28.15-.59.24-.93.24H6c-1.1 0-2-.9-2-2V8.83L1.9 6.73 2.1 4.93z\"}),n.a.createElement(\"path\",{d:\"M3.55 2.44L2.1 3.89l18 18 1.45-1.45z\"})))),n.a.createElement(\"span\",{className:\"toggle-status\"},d?\"Camera On\":\"Camera Off\"))),n.a.createElement(\"button\",{className:\"primary-button\",onClick:()=>{if(!e.current||!a.current)return;if(!t)return void alert(\"Model is not loaded yet. Please wait.\");const l=e.current,n=a.current,c=n.getContext(\"2d\");n.width=l.videoWidth,n.height=l.videoHeight,c.drawImage(l,0,0,n.width,n.height);const r=n.toDataURL(\"image/jpeg\");v(r),F(n)},disabled:!d||i||E||!t},\"Capture Image\")))),n.a.createElement(\"div\",{className:\"results-section\"},n.a.createElement(\"div\",{className:\"results-card\"},n.a.createElement(\"h2\",null,\"Analysis Results\"),i?n.a.createElement(\"div\",{className:\"loading-container\"},n.a.createElement(\"div\",{className:\"loading-spinner\"}),n.a.createElement(\"p\",null,\"Analyzing image with \",f,\"...\")):null!==r.age?n.a.createElement(\"div\",{className:\"prediction-results\"},n.a.createElement(\"div\",{className:\"result-item\"},n.a.createElement(\"div\",{className:\"result-label\"},\"Age\"),n.a.createElement(\"div\",{className:\"result-value\"},r.age,\" years\")),n.a.createElement(\"div\",{className:\"result-item\"},n.a.createElement(\"div\",{className:\"result-label\"},\"Gender\"),n.a.createElement(\"div\",{className:\"result-value\"},r.gender)),n.a.createElement(\"div\",{className:\"performance-metrics\"},n.a.createElement(\"div\",{className:\"result-item\"},n.a.createElement(\"div\",{className:\"result-label\"},\"Model Load Time\"),n.a.createElement(\"div\",{className:\"result-value\"},b,\" ms\")),h&&n.a.createElement(\"div\",{className:\"result-item\"},n.a.createElement(\"div\",{className:\"result-label\"},\"Processing Time\"),n.a.createElement(\"div\",{className:\"result-value\"},h,\" ms\"))),n.a.createElement(\"div\",{className:\"model-info\"},\"Using \",\"resnet34\"===f?\"ResNet-34\":\"ResNet-152\",\" model\")):n.a.createElement(\"div\",{className:\"empty-results\"},n.a.createElement(\"p\",null,\"Capture an image to see predictions\"),b&&n.a.createElement(\"div\",{className:\"model-load-info\"},n.a.createElement(\"p\",null,\"Model loaded in \",b,\" ms\")))),n.a.createElement(\"div\",{className:\"info-card\"},n.a.createElement(\"h3\",null,\"How it works\"),n.a.createElement(\"p\",null,\"This app uses a TensorFlow.js model running directly in your browser to predict age and gender from facial images.\"),n.a.createElement(\"p\",null,\"For best results:\"),n.a.createElement(\"ul\",null,n.a.createElement(\"li\",null,\"Ensure good lighting\"),n.a.createElement(\"li\",null,\"Face the camera directly\"),n.a.createElement(\"li\",null,\"Remove hats or sunglasses\")))))))};var i=e=>{e&&e instanceof Function&&t.e(3).then(t.bind(null,262)).then(a=>{let{getCLS:t,getFID:l,getFCP:n,getLCP:c,getTTFB:r}=a;t(e),l(e),n(e),c(e),r(e)})};r.a.createRoot(document.getElementById(\"root\")).render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(m,null))),i()}},[[234,1,2]]]);","extractedComments":[]}